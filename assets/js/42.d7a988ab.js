(window.webpackJsonp=window.webpackJsonp||[]).push([[42],{391:function(t,e,n){"use strict";n.r(e);var a=n(25),r=Object(a.a)({},(function(){var t=this,e=t.$createElement,n=t._self._c||e;return n("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[n("h1",{attrs:{id:"function-hooks-setinterval"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#function-hooks-setinterval"}},[t._v("#")]),t._v(" function hooks setInterval")]),t._v(" "),n("h2",{attrs:{id:"setinterval-问题"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#setinterval-问题"}},[t._v("#")]),t._v(" setInterval 问题")]),t._v(" "),n("div",{staticClass:"language-text extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v('import React, { useState, useEffect, useRef } from "react";\nimport ReactDOM from "react-dom";\n\nfunction Counter() {\n  let [count, setCount] = useState(0);\n\n  useEffect(() => {\n    console.log(333);\n    let id = setInterval(() => {\n      console.log(222);\n      setCount(count + 1);\n    }, 1000);\n    return () => {\n      console.log(1111);\n      clearInterval(id);\n    };\n  });\n\n  return <h1>{count}</h1>;\n}\n\nconst rootElement = document.getElementById("root");\n\n// Second interval to demonstrate the issue.\n// Fast updates from it cause the Counter\'s\n// interval to constantly reset and never fire.\n// setInterval(() => {\n//   ReactDOM.render(<Counter />, rootElement);\n// }, 100);\nReactDOM.render(<Counter />, rootElement);\n')])])]),n("p",[t._v("运行结果是正常的，通过打印可以看出，它是先清除setInterval再添加setInterval来执行的，这样如果时间设置的较大没什么问题，但是如果设置时间比较小的话，还没有等到setInterval执行的时候，就已经被清除了")]),t._v(" "),n("div",{staticClass:"language-text extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v("setInterval(() => {\n  ReactDOM.render(<Counter />, rootElement);\n}, 100);\n")])])]),n("p",[t._v("可以看到一直没有得到执行就会被清除")]),t._v(" "),n("p",[n("img",{attrs:{src:"https://upload-images.jianshu.io/upload_images/4432476-6f43a26ab98fb712.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240",alt:"image.png"}})]),t._v(" "),n("p",[t._v("这是因为每次render，都会执行useEffect，但是如果这样的代码的话")]),t._v(" "),n("div",{staticClass:"language-text extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v('import React, { useState, useEffect, useRef } from "react";\nimport ReactDOM from "react-dom";\n\nfunction Counter() {\n  const [count, setCount] = useState(0);\n\n  useEffect(() => {\n    let id = setInterval(() => {\n      setCount(count + 1);\n    }, 1000);\n    return () => {\n      console.log(1234);\n      clearInterval(id);\n    };\n  }, []);\n\n  return <h1>{count}</h1>;\n}\n\nconst rootElement = document.getElementById("root");\nReactDOM.render(<Counter />, rootElement);\n')])])]),n("p",[t._v("可以看到它会只执行一次，因为setCount只是取得了第一次传入的count，也就是0，所以数字就一直为1,但是循环还是在执行")]),t._v(" "),n("p",[n("img",{attrs:{src:"https://upload-images.jianshu.io/upload_images/4432476-69c67ef5478b6c6e.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240",alt:"image.png"}})]),t._v(" "),n("p",[t._v("可以参考如下链接进行使用setInterval "),n("a",{attrs:{href:"https://overreacted.io/making-setinterval-declarative-with-react-hooks/",target:"_blank",rel:"noopener noreferrer"}},[t._v("https://overreacted.io/making-setinterval-declarative-with-react-hooks/"),n("OutboundLink")],1)])])}),[],!1,null,null,null);e.default=r.exports}}]);
(window.webpackJsonp=window.webpackJsonp||[]).push([[20],{369:function(e,a,s){"use strict";s.r(a);var t=s(25),r=Object(t.a)({},(function(){var e=this,a=e.$createElement,s=e._self._c||a;return s("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[s("h1",{attrs:{id:"前端安全"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#前端安全"}},[e._v("#")]),e._v(" 前端安全")]),e._v(" "),s("h1",{attrs:{id:"什么是-cookie"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#什么是-cookie"}},[e._v("#")]),e._v(" 什么是 cookie")]),e._v(" "),s("p",[e._v("就是一段文本，一般服务端设置返回给浏览器")]),e._v(" "),s("h1",{attrs:{id:"什么是-session"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#什么是-session"}},[e._v("#")]),e._v(" 什么是 session")]),e._v(" "),s("p",[e._v("session 就是在后端内存中临时一个对象，保存一些登录的信息，connect 结束之后就销毁\n可以超时清除，也可以服务器主动清除")]),e._v(" "),s("h1",{attrs:{id:"不同域名设置-cookie"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#不同域名设置-cookie"}},[e._v("#")]),e._v(" 不同域名设置 cookie")]),e._v(" "),s("p",[e._v("cookie 只能绑定在单一域名下，只能设置本身或者父域名")]),e._v(" "),s("h1",{attrs:{id:"cookie-跨域"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#cookie-跨域"}},[e._v("#")]),e._v(" cookie 跨域")]),e._v(" "),s("p",[e._v("通过代理，jsonp")]),e._v(" "),s("h1",{attrs:{id:"csrf"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#csrf"}},[e._v("#")]),e._v(" csrf")]),e._v(" "),s("p",[e._v("就是拿到合法的身份，去伪造请求")]),e._v(" "),s("h1",{attrs:{id:"token"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#token"}},[e._v("#")]),e._v(" token")]),e._v(" "),s("p",[e._v("服务端返回的一个合法的字符串，token 由三部分组成，header，payload，Signature 组成")]),e._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("// 由 HMACSHA256 算法进行签名，secret 不能外泄\nconst sign = HMACSHA256(base64.encode(header) + '.' + base64.encode(payload), secret)\n\n// jwt 由三部分拼接而成\nconst jwt = base64.encode(header) + '.' + base64.encode(payload) + '.' + sign\n\n")])])])])}),[],!1,null,null,null);a.default=r.exports}}]);